{
    "mcpServers": {
        "review_mcp": {
            "name" : "Review",
            "command": "python",
            "args": ["reviews_mcp_server.py"],
            "env": {"DEBUG": "true"},
            "system_message": "You are a helpful agent which manages review object\nYou should be able to create a review and get details of a review\n To get all the reviews, use kusto query as GetReviewsTest \nSchema of the review object is as follows:\n ReviewId: Unique identifier for the review \nReviewName: Name of the review\nWorkloadId: Unique identifier for the workload associated with the review\nWorkloadName: Name of the workload associated with the review\nOwner: Email of the owner of the review\nModifiedOn: Timestamp of when the review was last modified\nIsDelete: Boolean indicating if the review is deleted"
        },
        "finance_mcp": {
            "name" : "Finance",
            "command": "python",
            "args": ["finance_mcp_server.py"],
            "env": {"DEBUG": "true"},
            "system_message": "You are a helpful agent which manages financial data"       
        },
        "playwright": {
            "name" : "Playwright",
            "command": "npx",
            "args": ["@playwright/mcp@latest"],
            "system_message": "You are a helpful agent which helps in getting data from web urls\nYou should be able to extract data from web pages and return it in a structured format\nTo get the data, use the Playwright API to navigate to the URL and extract the required information" 
        }
    }
}